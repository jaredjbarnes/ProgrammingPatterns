{"version":3,"sources":["../../src/observable/Observer.js"],"names":["STOPPED","STARTED","DISPOSED","EMPTY_FUCNTION","Observer","type","dispose","callback","config","onDispose","state","event"],"mappings":";;;;;;;;;;AAAA,IAAMA,UAAU,SAAhB;AACA,IAAMC,UAAU,SAAhB;AACA,IAAMC,WAAW,UAAjB;AACA,IAAMC,iBAAiB,SAAjBA,cAAiB,GAAI,CAAE,CAA7B;;IAEqBC,Q;AACjB,4BAAuC;AAAA,YAA1BC,IAA0B,QAA1BA,IAA0B;AAAA,YAApBC,OAAoB,QAApBA,OAAoB;AAAA,YAAXC,QAAW,QAAXA,QAAW;;AAAA;;AAEnC,aAAKC,MAAL,GAAc;AACVH,kBAAMA,QAAQ,IADJ;AAEVI,uBAAW,OAAOA,SAAP,KAAqB,UAArB,GAAkCA,SAAlC,GAA8CN,cAF/C;AAGVI,sBAAU,OAAOA,QAAP,KAAoB,UAApB,GAAiCA,QAAjC,GAA4CJ;AAH5C,SAAd;;AAMA,aAAKO,KAAL,GAAaT,OAAb;AACH;;;;gCAEM;AACH,gBAAI,KAAKS,KAAL,KAAeV,OAAnB,EAA2B;AACvB,qBAAKU,KAAL,GAAaT,OAAb;AACH;AACJ;;;+BAEK;AACF,gBAAI,KAAKS,KAAL,KAAeT,OAAnB,EAA2B;AACvB,qBAAKS,KAAL,GAAaV,OAAb;AACH;AACJ;;;kCAEQ;AACL,gBAAI,KAAKU,KAAL,KAAeT,OAAf,IAA0B,KAAKS,KAAL,KAAeV,OAA7C,EAAqD;AACjD,qBAAKU,KAAL,GAAaR,QAAb;AACA,qBAAKM,MAAL,CAAYC,SAAZ;AACH;AACJ;;;+BAEME,K,EAAM;AACT,gBAAIA,MAAMN,IAAN,KAAe,KAAKG,MAAL,CAAYH,IAA3B,IAAmC,KAAKK,KAAL,KAAeT,OAAtD,EAA8D;AAC1D,qBAAKO,MAAL,CAAYD,QAAZ,CAAqBI,KAArB;AACH;AACJ;;;;;;kBAnCgBP,Q","file":"Observer.js","sourcesContent":["const STOPPED = \"stopped\";\nconst STARTED = \"started\";\nconst DISPOSED = \"disposed\";\nconst EMPTY_FUCNTION = ()=>{};\n\nexport default class Observer {\n    constructor({type, dispose, callback}) {\n\n        this.config = {\n            type: type || null,\n            onDispose: typeof onDispose === \"function\" ? onDispose : EMPTY_FUCNTION,\n            callback: typeof callback === \"function\" ? callback : EMPTY_FUCNTION\n        };\n\n        this.state = STARTED;\n    }\n\n    start(){\n        if (this.state === STOPPED){\n            this.state = STARTED;\n        }\n    }\n\n    stop(){\n        if (this.state === STARTED){\n            this.state = STOPPED;\n        }\n    }\n\n    dispose(){\n        if (this.state === STARTED || this.state === STOPPED){\n            this.state = DISPOSED;\n            this.config.onDispose();\n        }\n    }\n\n    notify(event){\n        if (event.type === this.config.type && this.state === STARTED){\n            this.config.callback(event);\n        }\n    }\n}"]}