{"version":3,"sources":["../../src/fluent/QueryBuilder.js"],"names":["QueryBuilder","rootNode","factory","QueryFactory","type","node","createAndNode","children","push","createOrNode","propertyName","builder","OperationBuilder"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;;;;;IAEqBA,Y;AAEjB,4BAAc;AAAA;;AACV,aAAKC,QAAL,GAAgB,IAAhB;AACA,aAAKC,OAAL,GAAe,IAAIC,sBAAJ,EAAf;AACH;;;;8BAEK;AACF,gBAAI,KAAKF,QAAL,IAAiB,KAAKA,QAAL,CAAcG,IAAd,KAAuB,KAA5C,EAAmD;;AAE/C,oBAAMC,OAAO,KAAKH,OAAL,CAAaI,aAAb,EAAb;;AAEAD,qBAAKE,QAAL,CAAcC,IAAd,CAAmB,KAAKP,QAAxB;AACA,qBAAKA,QAAL,GAAgBI,IAAhB;AAEH,aAPD,MAOO;AACH,qBAAKJ,QAAL,GAAgB,KAAKC,OAAL,CAAaI,aAAb,EAAhB;AACH;;AAED,mBAAO,IAAP;AACH;;;6BAEI;AACD,gBAAI,KAAKL,QAAL,IAAiB,KAAKA,QAAL,CAAcG,IAAd,KAAuB,IAA5C,EAAkD;;AAE9C,oBAAMC,OAAO,KAAKH,OAAL,CAAaO,YAAb,EAAb;;AAEAJ,qBAAKE,QAAL,CAAcC,IAAd,CAAmB,KAAKP,QAAxB;AACA,qBAAKA,QAAL,GAAgBI,IAAhB;AAEH,aAPD,MAOO;AACH,qBAAKJ,QAAL,GAAgB,KAAKC,OAAL,CAAaO,YAAb,EAAhB;AACH;;AAED,mBAAO,IAAP;AACH;;;mCAEUC,Y,EAAc;AACrB,gBAAI,KAAKT,QAAL,IAAiB,IAArB,EAA2B;AACvB,qBAAKA,QAAL,GAAgB,KAAKC,OAAL,CAAaI,aAAb,EAAhB;AACH;;AAED,gBAAMK,UAAU,IAAIC,0BAAJ,CAAqB,IAArB,EAA2B,KAAKX,QAAhC,EAA0CS,YAA1C,CAAhB;AACA,mBAAOC,OAAP;AACH;;;mCAEU;AACP,mBAAO,KAAKV,QAAZ;AACH;;;;;;kBAhDgBD,Y","file":"QueryBuilder.js","sourcesContent":["import QueryFactory from \"../factory/QueryFactory\";\nimport OperationBuilder from \"./OperationBuilder\";\n\nexport default class QueryBuilder {\n\n    constructor() {\n        this.rootNode = null;\n        this.factory = new QueryFactory();\n    }\n\n    and() {\n        if (this.rootNode && this.rootNode.type !== \"and\") {\n\n            const node = this.factory.createAndNode();\n\n            node.children.push(this.rootNode);\n            this.rootNode = node;\n\n        } else {\n            this.rootNode = this.factory.createAndNode();\n        }\n\n        return this;\n    }\n\n    or() {\n        if (this.rootNode && this.rootNode.type !== \"or\") {\n\n            const node = this.factory.createOrNode();\n\n            node.children.push(this.rootNode);\n            this.rootNode = node;\n\n        } else {\n            this.rootNode = this.factory.createOrNode();\n        }\n\n        return this;\n    }\n\n    isProperty(propertyName) {\n        if (this.rootNode == null) {\n            this.rootNode = this.factory.createAndNode();\n        }\n\n        const builder = new OperationBuilder(this, this.rootNode, propertyName);\n        return builder;\n    }\n\n    getQuery() {\n        return this.rootNode;\n    }\n\n}\n"]}